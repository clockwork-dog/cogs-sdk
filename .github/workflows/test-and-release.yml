name: Test & Publish

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: write

jobs:
  test-packages:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn run build
      - name: Type check packages
        run: yarn run types
      - name: Lint packages
        run: yarn run lint
      - name: Build docs
        run: yarn run build-docs

  test-template:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: template
    steps:
      - name: Sparse checkout just the template
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            template
            .node-version
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
          package_json_file: template/package.json
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - name: Install dependencies for the template
        run: pnpm install
      - name: Ensure the tests run with no generated apps
        run: pnpm run test
      - name: Ensure everything builds with no generated apps
        run: pnpm run build
      - name: Generate various apps into the template
        run: |
          pnpm exec turbo generate "cogs-sdk" --args "Javascript Plugin" "A JS plugin" "plugin" "javascript"
          pnpm exec turbo generate "cogs-sdk" --args "React Plugin" "A React plugin" "plugin" "react"
          pnpm exec turbo generate "cogs-sdk" --args "Javascript Custom Content" "A JS custom content" "customContent" "javascript"
          pnpm exec turbo generate "cogs-sdk" --args "React Custom Content" "A React custom content" "customContent" "react"
      - name: Install dependencies again so the new apps get their dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Ensure the tests run with the generated apps
        run: pnpm run test
      - name: Ensure everything builds with the generated apps
        run: pnpm run build

  tests-complete:
    runs-on: ubuntu-24.04
    needs:
      - test-packages
      - test-template
    steps:
      - run: echo "Tests complete"

  publish-npm:
    needs: tests-complete
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn
      - name: Install dependencies
        run: yarn install
      - name: Set version from git tag
        run: yarn workspaces foreach --all version ${GITHUB_REF#refs/tags/}
      - name: Build packages
        run: yarn run build
      - name: Release packages
        run: yarn run release
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docs:
    needs: tests-complete
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    steps:
      - if: ${{ env.ACT }}
        run: apt-get update && apt-get install -y git rsync
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn run build
      - name: Build docs
        run: yarn run build-docs
      - name: Release docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: docs
          folder: docs
